[{"D:\\worker-loader\\.eslintrc.js":"1","D:\\worker-loader\\babel.config.js":"2","D:\\worker-loader\\commitlint.config.js":"3","D:\\worker-loader\\globalSetupTest.js":"4","D:\\worker-loader\\husky.config.js":"5","D:\\worker-loader\\jest.config.js":"6","D:\\worker-loader\\lint-staged.config.js":"7","D:\\worker-loader\\setupTest.js":"8","D:\\worker-loader\\src\\cjs.js":"9","D:\\worker-loader\\src\\index.js":"10","D:\\worker-loader\\src\\runtime\\inline.js":"11","D:\\worker-loader\\src\\supportWebpack4.js":"12","D:\\worker-loader\\src\\supportWebpack5.js":"13","D:\\worker-loader\\src\\utils.js":"14","D:\\worker-loader\\test\\chunkFilename-option.test.js":"15","D:\\worker-loader\\test\\cjs.test.js":"16","D:\\worker-loader\\test\\esModule-option.test.js":"17","D:\\worker-loader\\test\\filename-options.test.js":"18","D:\\worker-loader\\test\\helpers\\compile.js":"19","D:\\worker-loader\\test\\helpers\\execute.js":"20","D:\\worker-loader\\test\\helpers\\getCompiler.js":"21","D:\\worker-loader\\test\\helpers\\getErrors.js":"22","D:\\worker-loader\\test\\helpers\\getModuleSource.js":"23","D:\\worker-loader\\test\\helpers\\getResultFromBrowser.js":"24","D:\\worker-loader\\test\\helpers\\getWarnings.js":"25","D:\\worker-loader\\test\\helpers\\index.js":"26","D:\\worker-loader\\test\\helpers\\normalizeErrors.js":"27","D:\\worker-loader\\test\\helpers\\readAsset.js":"28","D:\\worker-loader\\test\\helpers\\readAssets.js":"29","D:\\worker-loader\\test\\inline-option.test.js":"30","D:\\worker-loader\\test\\loader.test.js":"31","D:\\worker-loader\\test\\publicPath.test.js":"32","D:\\worker-loader\\test\\sourceMapperRegexp.test.js":"33","D:\\worker-loader\\test\\validate-options.test.js":"34","D:\\worker-loader\\test\\worker-option.test.js":"35","D:\\worker-loader\\src\\modules\\conf\\environment-conf.js":"36","D:\\worker-loader\\src\\modules\\registrar-worker.js":"37","D:\\worker-loader\\src\\modules\\user-account.js":"38","D:\\worker-loader\\src\\modules\\user-device-registrar.js":"39","D:\\worker-loader\\src\\modules\\validator-worker.js":"40","D:\\worker-loader\\src\\service-worker.js":"41","D:\\worker-loader\\test\\index.spec.js":"42","D:\\worker-loader\\test\\registrar-worker.spec.js":"43","D:\\worker-loader\\test\\user-device-registrar.spec.js":"44","D:\\worker-loader\\test\\validator-worker.spec.js":"45"},{"size":107,"mtime":1664768134432,"results":"46","hashOfConfig":"47"},{"size":584,"mtime":1664768134439,"results":"48","hashOfConfig":"47"},{"size":73,"mtime":1664768134441,"results":"49","hashOfConfig":"47"},{"size":230,"mtime":1664768134441,"results":"50","hashOfConfig":"47"},{"size":129,"mtime":1664768134441,"results":"51","hashOfConfig":"47"},{"size":151,"mtime":1664768134441,"results":"52","hashOfConfig":"47"},{"size":124,"mtime":1664768134441,"results":"53","hashOfConfig":"47"},{"size":25,"mtime":1664768134451,"results":"54","hashOfConfig":"47"},{"size":110,"mtime":1664768134452,"results":"55","hashOfConfig":"47"},{"size":3498,"mtime":1664768134453,"results":"56","hashOfConfig":"47"},{"size":1352,"mtime":1664768134454,"results":"57","hashOfConfig":"47"},{"size":1764,"mtime":1664768134454,"results":"58","hashOfConfig":"47"},{"size":2603,"mtime":1664768134454,"results":"59","hashOfConfig":"47"},{"size":3163,"mtime":1664768134455,"results":"60","hashOfConfig":"47"},{"size":4385,"mtime":1664768134460,"results":"61","hashOfConfig":"47"},{"size":161,"mtime":1664768134460,"results":"62","hashOfConfig":"47"},{"size":1718,"mtime":1664768134460,"results":"63","hashOfConfig":"47"},{"size":4770,"mtime":1664768134460,"results":"64","hashOfConfig":"47"},{"size":214,"mtime":1664768134468,"results":"65","hashOfConfig":"47"},{"size":565,"mtime":1664768134468,"results":"66","hashOfConfig":"47"},{"size":1457,"mtime":1664768134470,"results":"67","hashOfConfig":"47"},{"size":122,"mtime":1664768134470,"results":"68","hashOfConfig":"47"},{"size":179,"mtime":1664768134470,"results":"69","hashOfConfig":"47"},{"size":2010,"mtime":1664768134471,"results":"70","hashOfConfig":"47"},{"size":124,"mtime":1664768134471,"results":"71","hashOfConfig":"47"},{"size":610,"mtime":1664768134471,"results":"72","hashOfConfig":"47"},{"size":482,"mtime":1664768134471,"results":"73","hashOfConfig":"47"},{"size":540,"mtime":1664768134471,"results":"74","hashOfConfig":"47"},{"size":267,"mtime":1664768134471,"results":"75","hashOfConfig":"47"},{"size":10375,"mtime":1664768134472,"results":"76","hashOfConfig":"47"},{"size":4521,"mtime":1664768134473,"results":"77","hashOfConfig":"47"},{"size":6368,"mtime":1664768134473,"results":"78","hashOfConfig":"47"},{"size":2036,"mtime":1664768134473,"results":"79","hashOfConfig":"47"},{"size":2214,"mtime":1664768134473,"results":"80","hashOfConfig":"47"},{"size":3683,"mtime":1664768134473,"results":"81","hashOfConfig":"47"},{"size":2179,"mtime":1664513506550,"results":"82","hashOfConfig":"47"},{"size":1419,"mtime":1664523703252,"results":"83","hashOfConfig":"47"},{"size":245,"mtime":1663662356017,"results":"84","hashOfConfig":"47"},{"size":4417,"mtime":1664523703252,"results":"85","hashOfConfig":"47"},{"size":3577,"mtime":1664765197352,"results":"86","hashOfConfig":"47"},{"size":329,"mtime":1664763379187,"results":"87","hashOfConfig":"47"},{"size":130,"mtime":1664431952758,"results":"88","hashOfConfig":"47"},{"size":700,"mtime":1664766764229,"results":"89","hashOfConfig":"47"},{"size":206,"mtime":1664763379197,"results":"90","hashOfConfig":"47"},{"size":893,"mtime":1664767917485,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vx25pc",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":5,"warningCount":9,"fixableErrorCount":1,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":33,"warningCount":9,"fixableErrorCount":16,"fixableWarningCount":2,"source":"173"},{"filePath":"174","messages":"175","errorCount":31,"warningCount":16,"fixableErrorCount":14,"fixableWarningCount":3,"source":"176"},{"filePath":"177","messages":"178","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":8,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":2,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"189"},"D:\\worker-loader\\.eslintrc.js",[],"D:\\worker-loader\\babel.config.js",[],"D:\\worker-loader\\commitlint.config.js",[],"D:\\worker-loader\\globalSetupTest.js",[],"D:\\worker-loader\\husky.config.js",[],"D:\\worker-loader\\jest.config.js",[],"D:\\worker-loader\\lint-staged.config.js",[],"D:\\worker-loader\\setupTest.js",[],"D:\\worker-loader\\src\\cjs.js",[],"D:\\worker-loader\\src\\index.js",[],"D:\\worker-loader\\src\\runtime\\inline.js",[],"D:\\worker-loader\\src\\supportWebpack4.js",[],"D:\\worker-loader\\src\\supportWebpack5.js",[],"D:\\worker-loader\\src\\utils.js",[],"D:\\worker-loader\\test\\chunkFilename-option.test.js",[],"D:\\worker-loader\\test\\cjs.test.js",[],"D:\\worker-loader\\test\\esModule-option.test.js",[],"D:\\worker-loader\\test\\filename-options.test.js",[],"D:\\worker-loader\\test\\helpers\\compile.js",[],"D:\\worker-loader\\test\\helpers\\execute.js",[],"D:\\worker-loader\\test\\helpers\\getCompiler.js",[],"D:\\worker-loader\\test\\helpers\\getErrors.js",[],"D:\\worker-loader\\test\\helpers\\getModuleSource.js",[],"D:\\worker-loader\\test\\helpers\\getResultFromBrowser.js",[],"D:\\worker-loader\\test\\helpers\\getWarnings.js",[],"D:\\worker-loader\\test\\helpers\\index.js",[],"D:\\worker-loader\\test\\helpers\\normalizeErrors.js",[],"D:\\worker-loader\\test\\helpers\\readAsset.js",[],"D:\\worker-loader\\test\\helpers\\readAssets.js",[],"D:\\worker-loader\\test\\inline-option.test.js",[],"D:\\worker-loader\\test\\loader.test.js",[],"D:\\worker-loader\\test\\publicPath.test.js",[],"D:\\worker-loader\\test\\sourceMapperRegexp.test.js",[],"D:\\worker-loader\\test\\validate-options.test.js",[],"D:\\worker-loader\\test\\worker-option.test.js",[],"D:\\worker-loader\\src\\modules\\conf\\environment-conf.js",["190"],"export const TxnValidatorConf = {\r\n    env: {\r\n        dev: {\r\n            wallet: {\r\n                getPubKeyUrl: 'http://localhost:5000/wallets/masque/publicKey',\r\n                generateSignatureUrl: 'http://localhost:5000/wallets/sign'\r\n            },\r\n            beams: {\r\n                instanceId: 'ed6e47de-ab49-489a-8982-eeec598b2b8b',\r\n                authUrl: 'http://localhost:5000/pusher/beams-auth'\r\n            },\r\n            txnGateway: {\r\n                registerDeviceUrl: 'http://localhost:5000/devices',\r\n                keepAliveUrl: 'http://localhost:5000/devices/{deviceId}/status',\r\n                queryTxn: 'http://localhost:5000/queryTxn',\r\n                submitValidatedTxnUrl: 'http://localhost:5000/submitValidatedTxn'\r\n            }\r\n        },\r\n        test: {\r\n            wallet: {\r\n                getPubKeyUrl: 'https://wallet-dev.adldigitalservice.com/api/v1/wallets/getPublickey',\r\n                generateSignatureUrl: 'https://wallet-dev.adldigitalservice.com/api/v1/wallets/sign',\r\n\r\n            },\r\n            beams: {\r\n                instanceId: 'eb3d4c21-3ff6-4378-8117-f0acf095d6b3',\r\n                authUrl: 'https://wallet-dev.adldigitalservice.com/api/v1/devices/auth'\r\n            },\r\n            txnGateway: {\r\n                registerDeviceUrl: 'https://wallet-dev.adldigitalservice.com/api/v1/devices/',\r\n                keepAliveUrl: 'https://wallet-dev.adldigitalservice.com/api/v1/devices/{deviceId}/status',\r\n                queryTxn: 'https://wallet-dev.adldigitalservice.com/rpc/transaction-query',\r\n                submitValidatedTxnUrl: 'https://wallet-dev.adldigitalservice.com/rpc/transaction-gateway'\r\n            }\r\n        },\r\n        prod: {\r\n            wallet: {\r\n                getPubKeyUrl: '',\r\n                generateSignatureUrl:''\r\n            },\r\n            beams: {\r\n                instanceId: 'eb3d4c21-3ff6-4378-8117-f0acf095d6b3',\r\n                authUrl: ''\r\n            },\r\n            txnGateway: {\r\n                registerDeviceUrl: '',\r\n                keepAliveUrl:'',\r\n                queryTxn: '',\r\n                submitValidatedTxnUrl: ''\r\n            }\r\n        }\r\n    }\r\n};","D:\\worker-loader\\src\\modules\\registrar-worker.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204"],"export function registrarWorker() {\r\n  self.addEventListener('message', (e) => {\r\n    try {\r\n      registerUserDevice(e.data);\r\n      intervalUpdateStatus(e.data);\r\n    } catch (err) {\r\n      console.error('Error', err);\r\n    }\r\n  });\r\n\r\n  function registerUserDevice(data) {\r\n    request(data.requestPubKey)\r\n      .then((response) => response.json()).then((result) => {\r\n        console.log('III-User pubkey:' + result.publicKey);\r\n        data.requestRegister.body = Object.assign(data.requestRegister.body, { PublicKey: result.publicKey });\r\n\r\n        request(data.requestRegister)\r\n          .then((response) => response.status)\r\n          .then((result) => {\r\n            console.log('IV-Register device success', result);\r\n          });\r\n      });\r\n  }\r\n\r\n  function intervalUpdateStatus(data) {\r\n    setInterval(() => {\r\n      data.requestKeepAlive.url = data.requestKeepAlive.url.replace('{deviceId}', data.requestKeepAlive.body.deviceId);\r\n      request(data.requestKeepAlive)\r\n        .then((response) => response.status)\r\n        .then((data) => {\r\n          console.log('V-Update status success ', data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }, 1000 * 60 * 0.5); // 0.5 minute\r\n  }\r\n\r\n  function request(req) {\r\n    return fetch(req.url, {\r\n      method: req.method,\r\n      headers: req.headers,\r\n      body: JSON.stringify(req.body),\r\n    });\r\n  }\r\n}","D:\\worker-loader\\src\\modules\\user-account.js",["205"],"export class UserAccount {\r\n    constructor (uuid, accountAddress, encryptedMnemonicPhrase) {\r\n        this._uuid = uuid;\r\n        this._accountAddress = accountAddress;\r\n        this._encryptedMnemonicPhrase = encryptedMnemonicPhrase;\r\n    }\r\n}","D:\\worker-loader\\src\\modules\\user-device-registrar.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import * as PusherPushNotifications from '@pusher/push-notifications-web';\r\nimport { registrarWorker } from './registrar-worker';\r\nimport { validatorWorker } from './validator-worker';\r\n\r\nasync function _registerToPusherBeams(conf, uuid) {\r\n  //Registering a service worker\r\n  let promise = new Promise((resolve, reject) => {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker\r\n        .register('service-worker.js')\r\n        .then(function () {\r\n          console.log('I-Service Worker Registered');\r\n          const beamsClient = new PusherPushNotifications.Client({\r\n            instanceId: conf.beams.instanceId,\r\n          });\r\n\r\n          beamsClient\r\n            .getUserId()\r\n            .then((userId) => {\r\n              // Check if the Beams user matches the user that is currently logged in\r\n              if (userId !== uuid) {\r\n                // Unregister for notifications\r\n                return beamsClient.stop();\r\n              }\r\n            }).catch((error) => {\r\n              throw error;\r\n            });\r\n\r\n          const beamsTokenProvider = new PusherPushNotifications.TokenProvider({\r\n            url: conf.beams.authUrl,\r\n          });\r\n\r\n          let _deviceId;\r\n          beamsClient.start()\r\n            .then((beamsClient) => beamsClient.getDeviceId())\r\n            .then((deviceId) => {\r\n              _deviceId = deviceId;\r\n              console.log('II-Successfully registered with Beams. Device ID:' + deviceId);\r\n            })\r\n            .then(() => {\r\n              beamsClient.setUserId(uuid, beamsTokenProvider)\r\n                .then(() => {\r\n                  console.log('User ID has been set');\r\n                  resolve(_deviceId);\r\n                })\r\n                .catch((e) => {\r\n                  reject(new Error('Could not authenticate with Beams:' + e));\r\n                });\r\n            })\r\n            .catch((e) => {\r\n              reject(new Error('Could not get device id' + e));\r\n            });\r\n        });\r\n    } else {\r\n      reject(new Error('Service workers are not supported in this browser'));\r\n    }\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nfunction _createWorkerForRegisterUserDevice(conf, userAccount, deviceId) {\r\n  //Start Registration\r\n  let workerBlob = new Blob(\r\n    [registrarWorker.toString().replace(/^function .+\\{?|\\}$/g, '')],\r\n    { type: 'text/javascript' }\r\n  );\r\n  let workerBlobUrl = URL.createObjectURL(workerBlob);\r\n  let worker = new Worker(workerBlobUrl);\r\n  worker.postMessage({\r\n    requestPubKey: {\r\n      url: conf.wallet.getPubKeyUrl,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: {\r\n        userUniqueId: userAccount._uuid,\r\n        encryptMnemonic: userAccount._encryptedMnemonicPhrase,\r\n        accountAddress: userAccount._accountAddress\r\n      },\r\n    },\r\n    requestRegister: {\r\n      url: conf.txnGateway.registerDeviceUrl,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: {\r\n        UserId: userAccount._uuid,\r\n        DeviceId: deviceId\r\n      },\r\n    },\r\n    requestKeepAlive: {\r\n      url: conf.txnGateway.keepAliveUrl,\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: {\r\n        deviceId: deviceId\r\n      },\r\n    }\r\n  });\r\n}\r\n\r\nfunction _createWorkerAsValidator(conf, userAccount) {\r\n  //Initialize worker\r\n  let workerBlob = new Blob(\r\n    [validatorWorker.toString().replace(/^function .+\\{?|\\}$/g, '')],\r\n    { type: 'text/javascript' }\r\n  );\r\n  let workerBlobUrl = URL.createObjectURL(workerBlob);\r\n  let worker = new Worker(workerBlobUrl);\r\n\r\n  worker.postMessage({\r\n    type: 'INIT_VALIDATOR',\r\n    payload: {\r\n      userAccount: userAccount,\r\n      walletService: conf.wallet,\r\n      txnGateway: conf.txnGateway\r\n    }\r\n  });\r\n\r\n}\r\n\r\nclass UserDeviceRegistrar {\r\n  constructor(conf, userAccount) {\r\n    this._conf = conf;\r\n    this._userAccount = userAccount;\r\n  }\r\n\r\n  register() {\r\n    try {\r\n      _registerToPusherBeams(this._conf, this._userAccount._uuid)\r\n        .then((deviceId) => {\r\n          _createWorkerForRegisterUserDevice(this._conf, this._userAccount, deviceId);\r\n          _createWorkerAsValidator(this._conf, this._userAccount);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserDeviceRegistrar;","D:\\worker-loader\\src\\modules\\validator-worker.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"/* //-disable no-unused-vars */\r\nexport function validatorWorker() {\r\n  let userAccount;\r\n  let txnGatewayEndpoints;\r\n  let walletService;\r\n  self.addEventListener('message', (e) => {\r\n    if (e.data && e.data.type === 'INIT_VALIDATOR') {\r\n      userAccount = e.data.payload.userAccount;\r\n      txnGatewayEndpoints = e.data.payload.txnGateway;\r\n      walletService = e.data.payload.walletService;\r\n    }\r\n  });\r\n\r\n  const broadcast = new BroadcastChannel('txn-validator');\r\n  broadcast.onmessage = (e) => {\r\n    if (e.data && e.data.type === 'VALIDATE_TXN') {\r\n      //Must providing by Client\r\n\r\n      let queryUrl = txnGatewayEndpoints.queryTxn,\r\n        generateSignatureUrl = walletService.generateSignatureUrl,\r\n        submitValidatedTxnUrl = txnGatewayEndpoints.submitValidatedTxnUrl;\r\n      let userId = userAccount._uuid,\r\n        address = userAccount._accountAddress,\r\n        encryptedMnemonicPhrased = userAccount._encryptedMnemonicPhrase;\r\n\r\n      // Handle Transaction Notification //\r\n      try {\r\n        if (!e.data.payload || e.data.payload.txnId == undefined) {\r\n          throw new Error('txnid is undefined');\r\n        }\r\n  \r\n        let txnId = e.data.payload.txnId;\r\n        let txnEncodeData;\r\n        let signature;\r\n  \r\n        //1. Query Transaction Data by Transaction ID\r\n  \r\n        let queryTxnIdResp = fetch(queryUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          // body: JSON.stringify(user)\r\n          body: JSON.stringify({\r\n            id: Date.now()+ \"\",\r\n            jsonrpc: '2.0',\r\n            method: 'getunverifytx',\r\n            params: [txnId],\r\n          }),\r\n        })\r\n        .then(response=>response.json())\r\n        .then((data) =>\r\n        {\r\n          txnEncodeData = data.result.txnEncodeData;\r\n          console.log('Raw Txn Data :' + txnEncodeData);\r\n          if (txnEncodeData != undefined) {\r\n            fetch(generateSignatureUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n              },\r\n              // body: JSON.stringify(user)\r\n              body: JSON.stringify({\r\n                userUniqueId: userId,\r\n                encryptMnemonic: encryptedMnemonicPhrased,\r\n                accountAddress: address,\r\n                message: txnEncodeData,\r\n              }),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                signature = data.signature;\r\n                console.log('Signature :' + signature);\r\n                //4. Submit validated transaction\r\n                if (signature) {\r\n                  fetch(submitValidatedTxnUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json;charset=utf-8',\r\n                    },\r\n                    // body: JSON.stringify(user)\r\n                    body: JSON.stringify({\r\n                      id: Date.now()+ \"\",\r\n                      jsonrpc: '2.0',\r\n                      method: 'sendvalidatedrawtransaction',\r\n                      params: [txnId, signature],\r\n                    }),\r\n                  })\r\n                  .then(response=>response.json())\r\n                  .then((data) => {\r\n                    console.log('Txn submitted :' + JSON.stringify);\r\n                  });\r\n                }\r\n              });\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      } \r\n    }\r\n  };\r\n}\r\n","D:\\worker-loader\\src\\service-worker.js",["295","296","297","298"],"importScripts(\"https://js.pusher.com/beams/service-worker.js\");\r\n\r\nPusherPushNotifications.onNotificationReceived = ({ pushEvent, payload }) => {\r\n  \r\n  const broadcast = new BroadcastChannel('txn-validator');\r\n  broadcast.postMessage({\r\n    type: 'VALIDATE_TXN',\r\n    payload: { txnId: payload.notification.body }\r\n  });\r\n};\r\n\r\n","D:\\worker-loader\\test\\index.spec.js",[],"D:\\worker-loader\\test\\registrar-worker.spec.js",["299","300","301","302","303","304","305","306","307","308"],"import { registrarWorker } from \"../src/modules/registrar-worker\";\r\nimport {jest} from '@jest/globals'\r\n\r\ndescribe(\"Registrar Worker\", () => {\r\n  it(\"should listening on message event\", () => {\r\n    const NOW = '2019-05-03T08:00:00.000Z';\r\n    const spy = jest.spyOn(self, 'addEventListener').mockImplementationOnce((event, handler, options) => {\r\n      return new Date(NOW).getTime();\r\n    });\r\n    registrarWorker('ssssss', 'ssss');\r\n    expect(self.addEventListener).toBeCalledWith('message', expect.any(Function), false);\r\n    registrarWorker();\r\n    expect(spy).toHaveBeenCalledTimes(1);\r\n    // expect(self.addEventListener).toBeCalledWith('message', expect.any(Function), false);\r\n  });\r\n});\r\n","D:\\worker-loader\\test\\user-device-registrar.spec.js",[],"D:\\worker-loader\\test\\validator-worker.spec.js",["309","310","311","312","313"],"import { validatorWorker } from \"../src/modules/validator-worker\";\r\nimport {jest} from '@jest/globals'\r\n\r\n\r\ndescribe(\"validatorWorker\", () => {\r\n\r\n  it('should listening on message event', async () => {\r\n    const setTimeoutSpy = jest.spyOn(global, 'setTimeout');\r\n    setTimeoutSpy.mockImplementation((fn) => fn());\r\n  });\r\n\r\n  it('should userAccount on message event', async () => {\r\n    const setTimeoutSpy = jest.spyOn(global, 'setTimeout');\r\n    setTimeoutSpy.mockImplementation((fn) => fn());\r\n  });\r\n\r\n  it('should txnGatewayEndpoints on message event', async () => {\r\n    const setTimeoutSpy = jest.spyOn(global, 'setTimeout');\r\n    setTimeoutSpy.mockImplementation((fn) => fn());\r\n  });\r\n\r\n\r\n  it('should walletService on message event', async () => {\r\n    const setTimeoutSpy = jest.spyOn(global, 'setTimeout');\r\n    setTimeoutSpy.mockImplementation((fn) => fn());\r\n  })\r\n\r\n});\r\n\r\n\r\n",{"ruleId":"314","severity":2,"message":"315","line":1,"column":1,"nodeType":"316","endLine":53,"endColumn":3},{"ruleId":"314","severity":2,"message":"315","line":1,"column":1,"nodeType":"316","endLine":46,"endColumn":2},{"ruleId":"317","severity":2,"message":"318","line":2,"column":3,"nodeType":"319","messageId":"320","endLine":2,"endColumn":7},{"ruleId":"321","severity":1,"message":"322","line":7,"column":7,"nodeType":"323","messageId":"324","endLine":7,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":14,"column":9,"nodeType":"323","messageId":"324","endLine":14,"endColumn":20},{"ruleId":"325","severity":2,"message":"326","line":14,"column":21,"nodeType":"327","messageId":"328","endLine":14,"endColumn":58,"fix":"329"},{"ruleId":"330","severity":1,"message":"331","line":15,"column":9,"nodeType":"319","messageId":"332","endLine":15,"endColumn":13},{"ruleId":"333","severity":1,"message":"334","line":19,"column":18,"nodeType":"319","messageId":"335","endLine":19,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":20,"column":13,"nodeType":"323","messageId":"324","endLine":20,"endColumn":24},{"ruleId":"330","severity":1,"message":"331","line":27,"column":7,"nodeType":"319","messageId":"332","endLine":27,"endColumn":11},{"ruleId":"333","severity":1,"message":"336","line":30,"column":16,"nodeType":"319","messageId":"335","endLine":30,"endColumn":20},{"ruleId":"321","severity":1,"message":"322","line":31,"column":11,"nodeType":"323","messageId":"324","endLine":31,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":34,"column":11,"nodeType":"323","messageId":"324","endLine":34,"endColumn":24},{"ruleId":"337","severity":2,"message":"338","line":36,"column":26,"nodeType":"339","messageId":"340","endLine":36,"endColumn":39},{"ruleId":"317","severity":2,"message":"341","line":40,"column":12,"nodeType":"319","messageId":"320","endLine":40,"endColumn":17},{"ruleId":"314","severity":2,"message":"315","line":1,"column":1,"nodeType":"316","endLine":7,"endColumn":2},{"ruleId":"342","severity":1,"message":"343","line":1,"column":1,"nodeType":"344","endLine":1,"endColumn":75,"fix":"345"},{"ruleId":"346","severity":2,"message":"347","line":1,"column":8,"nodeType":"348","endLine":1,"endColumn":36,"fix":"349"},{"ruleId":"350","severity":2,"message":"351","line":1,"column":42,"nodeType":"352","endLine":1,"endColumn":74},{"ruleId":"353","severity":2,"message":"354","line":5,"column":1,"nodeType":"355","messageId":"356","endLine":60,"endColumn":2},{"ruleId":"357","severity":2,"message":"358","line":6,"column":3,"nodeType":"339","messageId":"359","endLine":6,"endColumn":33,"fix":"360"},{"ruleId":"361","severity":2,"message":"362","line":7,"column":7,"nodeType":"319","messageId":"363","endLine":7,"endColumn":14,"fix":"364"},{"ruleId":"317","severity":2,"message":"365","line":8,"column":28,"nodeType":"319","messageId":"320","endLine":8,"endColumn":37},{"ruleId":"317","severity":2,"message":"365","line":9,"column":7,"nodeType":"319","messageId":"320","endLine":9,"endColumn":16},{"ruleId":"366","severity":1,"message":"367","line":11,"column":15,"nodeType":"368","messageId":"369","endLine":53,"endColumn":10,"fix":"370"},{"ruleId":"371","severity":1,"message":"372","line":11,"column":15,"nodeType":"368","messageId":"373","endLine":11,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":12,"column":11,"nodeType":"323","messageId":"324","endLine":12,"endColumn":22},{"ruleId":"374","severity":2,"message":"375","line":19,"column":28,"nodeType":"376","messageId":"377","endLine":19,"endColumn":30},{"ruleId":"353","severity":2,"message":"378","line":33,"column":15,"nodeType":"379","messageId":"356","endLine":33,"endColumn":24},{"ruleId":"333","severity":1,"message":"380","line":35,"column":20,"nodeType":"319","messageId":"335","endLine":35,"endColumn":31},{"ruleId":"321","severity":1,"message":"322","line":38,"column":15,"nodeType":"323","messageId":"324","endLine":38,"endColumn":26},{"ruleId":"325","severity":2,"message":"326","line":38,"column":27,"nodeType":"327","messageId":"328","endLine":38,"endColumn":89,"fix":"381"},{"ruleId":"321","severity":1,"message":"322","line":43,"column":19,"nodeType":"323","messageId":"324","endLine":43,"endColumn":30},{"ruleId":"325","severity":2,"message":"326","line":47,"column":36,"nodeType":"327","messageId":"328","endLine":47,"endColumn":76,"fix":"382"},{"ruleId":"325","severity":2,"message":"326","line":51,"column":32,"nodeType":"327","messageId":"328","endLine":51,"endColumn":61,"fix":"383"},{"ruleId":"353","severity":2,"message":"384","line":62,"column":1,"nodeType":"355","messageId":"356","endLine":105,"endColumn":2},{"ruleId":"357","severity":2,"message":"358","line":63,"column":3,"nodeType":"339","messageId":"359","endLine":63,"endColumn":23,"fix":"385"},{"ruleId":"361","severity":2,"message":"386","line":64,"column":7,"nodeType":"319","messageId":"363","endLine":64,"endColumn":17,"fix":"387"},{"ruleId":"317","severity":2,"message":"388","line":64,"column":24,"nodeType":"319","messageId":"320","endLine":64,"endColumn":28},{"ruleId":"361","severity":2,"message":"389","line":68,"column":7,"nodeType":"319","messageId":"363","endLine":68,"endColumn":20,"fix":"390"},{"ruleId":"361","severity":2,"message":"391","line":69,"column":7,"nodeType":"319","messageId":"363","endLine":69,"endColumn":13,"fix":"392"},{"ruleId":"317","severity":2,"message":"393","line":69,"column":20,"nodeType":"319","messageId":"320","endLine":69,"endColumn":26},{"ruleId":"353","severity":2,"message":"394","line":78,"column":23,"nodeType":"323","messageId":"356","endLine":78,"endColumn":40},{"ruleId":"353","severity":2,"message":"395","line":79,"column":26,"nodeType":"323","messageId":"356","endLine":79,"endColumn":62},{"ruleId":"353","severity":2,"message":"396","line":80,"column":25,"nodeType":"323","messageId":"356","endLine":80,"endColumn":52},{"ruleId":"353","severity":2,"message":"394","line":90,"column":17,"nodeType":"323","messageId":"356","endLine":90,"endColumn":34},{"ruleId":"397","severity":2,"message":"398","line":101,"column":9,"nodeType":"399","messageId":"400","endLine":101,"endColumn":27,"fix":"401"},{"ruleId":"353","severity":2,"message":"402","line":107,"column":1,"nodeType":"355","messageId":"356","endLine":125,"endColumn":2},{"ruleId":"357","severity":2,"message":"358","line":108,"column":3,"nodeType":"339","messageId":"359","endLine":108,"endColumn":22,"fix":"403"},{"ruleId":"361","severity":2,"message":"386","line":109,"column":7,"nodeType":"319","messageId":"363","endLine":109,"endColumn":17,"fix":"404"},{"ruleId":"317","severity":2,"message":"388","line":109,"column":24,"nodeType":"319","messageId":"320","endLine":109,"endColumn":28},{"ruleId":"361","severity":2,"message":"389","line":113,"column":7,"nodeType":"319","messageId":"363","endLine":113,"endColumn":20,"fix":"405"},{"ruleId":"361","severity":2,"message":"391","line":114,"column":7,"nodeType":"319","messageId":"363","endLine":114,"endColumn":13,"fix":"406"},{"ruleId":"317","severity":2,"message":"393","line":114,"column":20,"nodeType":"319","messageId":"320","endLine":114,"endColumn":26},{"ruleId":"397","severity":2,"message":"398","line":119,"column":7,"nodeType":"399","messageId":"400","endLine":119,"endColumn":31,"fix":"407"},{"ruleId":"353","severity":2,"message":"394","line":135,"column":42,"nodeType":"323","messageId":"356","endLine":135,"endColumn":65},{"ruleId":"321","severity":1,"message":"322","line":140,"column":16,"nodeType":"323","messageId":"324","endLine":140,"endColumn":29},{"ruleId":"321","severity":1,"message":"322","line":142,"column":7,"nodeType":"323","messageId":"324","endLine":142,"endColumn":20},{"ruleId":"314","severity":2,"message":"315","line":2,"column":1,"nodeType":"316","endLine":102,"endColumn":2},{"ruleId":"317","severity":2,"message":"318","line":6,"column":3,"nodeType":"319","messageId":"320","endLine":6,"endColumn":7},{"ruleId":"408","severity":1,"message":"409","line":8,"column":7,"nodeType":"410","messageId":"411","endLine":8,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":10,"column":7,"nodeType":"410","messageId":"411","endLine":10,"endColumn":51},{"ruleId":"317","severity":2,"message":"412","line":14,"column":25,"nodeType":"319","messageId":"320","endLine":14,"endColumn":41},{"ruleId":"357","severity":2,"message":"358","line":17,"column":7,"nodeType":"339","messageId":"359","endLine":17,"endColumn":33,"fix":"413"},{"ruleId":"414","severity":2,"message":"415","line":19,"column":7,"nodeType":"416","messageId":"417","endLine":21,"endColumn":75,"fix":"418"},{"ruleId":"361","severity":2,"message":"419","line":19,"column":11,"nodeType":"319","messageId":"363","endLine":19,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":20,"column":9,"nodeType":"379","messageId":"411","endLine":20,"endColumn":66,"fix":"420"},{"ruleId":"361","severity":2,"message":"421","line":20,"column":9,"nodeType":"319","messageId":"363","endLine":20,"endColumn":29},{"ruleId":"408","severity":1,"message":"409","line":21,"column":9,"nodeType":"379","messageId":"411","endLine":21,"endColumn":74,"fix":"422"},{"ruleId":"361","severity":2,"message":"423","line":21,"column":9,"nodeType":"319","messageId":"363","endLine":21,"endColumn":30,"fix":"424"},{"ruleId":"414","severity":2,"message":"415","line":22,"column":7,"nodeType":"416","messageId":"417","endLine":24,"endColumn":73,"fix":"425"},{"ruleId":"361","severity":2,"message":"426","line":22,"column":11,"nodeType":"319","messageId":"363","endLine":22,"endColumn":17},{"ruleId":"353","severity":2,"message":"394","line":22,"column":20,"nodeType":"323","messageId":"356","endLine":22,"endColumn":37},{"ruleId":"361","severity":2,"message":"427","line":23,"column":9,"nodeType":"319","messageId":"363","endLine":23,"endColumn":16},{"ruleId":"353","severity":2,"message":"396","line":23,"column":19,"nodeType":"323","messageId":"356","endLine":23,"endColumn":46},{"ruleId":"361","severity":2,"message":"428","line":24,"column":9,"nodeType":"319","messageId":"363","endLine":24,"endColumn":33,"fix":"429"},{"ruleId":"353","severity":2,"message":"395","line":24,"column":36,"nodeType":"323","messageId":"356","endLine":24,"endColumn":72},{"ruleId":"430","severity":2,"message":"431","line":28,"column":53,"nodeType":"327","messageId":"324","endLine":28,"endColumn":55},{"ruleId":"432","severity":1,"message":"433","line":28,"column":56,"nodeType":"319","messageId":"434","endLine":28,"endColumn":65},{"ruleId":"408","severity":1,"message":"409","line":32,"column":13,"nodeType":"379","messageId":"411","endLine":32,"endColumn":41,"fix":"435"},{"ruleId":"361","severity":2,"message":"436","line":32,"column":13,"nodeType":"319","messageId":"363","endLine":32,"endColumn":18,"fix":"437"},{"ruleId":"357","severity":2,"message":"358","line":36,"column":9,"nodeType":"339","messageId":"359","endLine":36,"endColumn":54,"fix":"438"},{"ruleId":"361","severity":2,"message":"439","line":38,"column":13,"nodeType":"319","messageId":"363","endLine":38,"endColumn":27,"fix":"440"},{"ruleId":"441","severity":2,"message":"442","line":38,"column":13,"nodeType":"319","messageId":"443","endLine":38,"endColumn":27},{"ruleId":"317","severity":2,"message":"341","line":38,"column":30,"nodeType":"319","messageId":"320","endLine":38,"endColumn":35},{"ruleId":"325","severity":2,"message":"326","line":45,"column":17,"nodeType":"327","messageId":"328","endLine":45,"endColumn":31,"fix":"444"},{"ruleId":"408","severity":1,"message":"409","line":54,"column":11,"nodeType":"410","messageId":"411","endLine":54,"endColumn":52},{"ruleId":"321","severity":1,"message":"322","line":55,"column":11,"nodeType":"323","messageId":"324","endLine":55,"endColumn":22},{"ruleId":"325","severity":2,"message":"326","line":55,"column":23,"nodeType":"327","messageId":"328","endLine":55,"endColumn":55,"fix":"445"},{"ruleId":"430","severity":2,"message":"446","line":56,"column":29,"nodeType":"327","messageId":"324","endLine":56,"endColumn":31},{"ruleId":"432","severity":1,"message":"433","line":56,"column":32,"nodeType":"319","messageId":"434","endLine":56,"endColumn":41},{"ruleId":"317","severity":2,"message":"341","line":57,"column":13,"nodeType":"319","messageId":"320","endLine":57,"endColumn":18},{"ruleId":"333","severity":1,"message":"447","line":71,"column":22,"nodeType":"319","messageId":"335","endLine":71,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":72,"column":17,"nodeType":"410","messageId":"411","endLine":72,"endColumn":43},{"ruleId":"321","severity":1,"message":"322","line":73,"column":17,"nodeType":"323","messageId":"324","endLine":73,"endColumn":28},{"ruleId":"325","severity":2,"message":"326","line":73,"column":29,"nodeType":"327","messageId":"328","endLine":73,"endColumn":54,"fix":"448"},{"ruleId":"357","severity":2,"message":"358","line":74,"column":17,"nodeType":"339","messageId":"359","endLine":74,"endColumn":50,"fix":"449"},{"ruleId":"317","severity":2,"message":"341","line":76,"column":19,"nodeType":"319","messageId":"320","endLine":76,"endColumn":24},{"ruleId":"325","severity":2,"message":"326","line":83,"column":27,"nodeType":"327","messageId":"328","endLine":83,"endColumn":41,"fix":"450"},{"ruleId":"333","severity":1,"message":"451","line":90,"column":26,"nodeType":"319","messageId":"335","endLine":90,"endColumn":30},{"ruleId":"441","severity":2,"message":"452","line":90,"column":26,"nodeType":"319","messageId":"443","endLine":90,"endColumn":30},{"ruleId":"321","severity":1,"message":"322","line":91,"column":21,"nodeType":"323","messageId":"324","endLine":91,"endColumn":32},{"ruleId":"325","severity":2,"message":"326","line":91,"column":33,"nodeType":"327","messageId":"328","endLine":91,"endColumn":67,"fix":"453"},{"ruleId":"333","severity":1,"message":"454","line":97,"column":16,"nodeType":"319","messageId":"335","endLine":97,"endColumn":17},{"ruleId":"321","severity":1,"message":"322","line":98,"column":9,"nodeType":"323","messageId":"324","endLine":98,"endColumn":22},{"ruleId":"317","severity":2,"message":"455","line":1,"column":1,"nodeType":"319","messageId":"320","endLine":1,"endColumn":14},{"ruleId":"317","severity":2,"message":"456","line":3,"column":1,"nodeType":"319","messageId":"320","endLine":3,"endColumn":24},{"ruleId":"441","severity":2,"message":"457","line":3,"column":53,"nodeType":"319","messageId":"443","endLine":3,"endColumn":62},{"ruleId":"317","severity":2,"message":"412","line":5,"column":25,"nodeType":"319","messageId":"320","endLine":5,"endColumn":41},{"ruleId":"342","severity":1,"message":"343","line":1,"column":1,"nodeType":"344","endLine":1,"endColumn":67,"fix":"458"},{"ruleId":"459","severity":2,"message":"460","line":2,"column":1,"nodeType":"344","endLine":2,"endColumn":35},{"ruleId":"342","severity":1,"message":"461","line":2,"column":1,"nodeType":"344","endLine":2,"endColumn":35,"fix":"462"},{"ruleId":"463","severity":2,"message":"464","line":2,"column":20,"nodeType":"352","endLine":2,"endColumn":35},{"ruleId":"317","severity":2,"message":"318","line":7,"column":28,"nodeType":"319","messageId":"320","endLine":7,"endColumn":32},{"ruleId":"441","severity":2,"message":"465","line":7,"column":78,"nodeType":"319","messageId":"443","endLine":7,"endColumn":83},{"ruleId":"441","severity":2,"message":"466","line":7,"column":85,"nodeType":"319","messageId":"443","endLine":7,"endColumn":92},{"ruleId":"441","severity":2,"message":"467","line":7,"column":94,"nodeType":"319","messageId":"443","endLine":7,"endColumn":101},{"ruleId":"468","severity":2,"message":"469","line":7,"column":106,"nodeType":"376","messageId":"470","endLine":9,"endColumn":6,"fix":"471"},{"ruleId":"317","severity":2,"message":"318","line":11,"column":12,"nodeType":"319","messageId":"320","endLine":11,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":1,"column":1,"nodeType":"344","endLine":1,"endColumn":67,"fix":"472"},{"ruleId":"441","severity":2,"message":"473","line":1,"column":10,"nodeType":"319","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"459","severity":2,"message":"460","line":2,"column":1,"nodeType":"344","endLine":2,"endColumn":35},{"ruleId":"342","severity":1,"message":"474","line":2,"column":1,"nodeType":"344","endLine":2,"endColumn":35,"fix":"475"},{"ruleId":"463","severity":2,"message":"464","line":2,"column":20,"nodeType":"352","endLine":2,"endColumn":35},"import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","no-undef","'self' is not defined.","Identifier","undef","no-console","Unexpected console statement.","MemberExpression","unexpected","prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"476","text":"477"},"no-param-reassign","Assignment to property of function parameter 'data'.","assignmentToFunctionParamProp","no-shadow","'result' is already declared in the upper scope on line 13 column 50.","noShadow","'data' is already declared in the upper scope on line 25 column 33.","line-comment-position","Expected comment to be above code.","Line","above","'fetch' is not defined.","import/order","There should be at least one empty line between import groups","ImportDeclaration",{"range":"478","text":"479"},"import/no-namespace","Unexpected namespace import.","ImportNamespaceSpecifier",{"range":"480","text":"481"},"import/no-unresolved","Unable to resolve path to module '@pusher/push-notifications-web'.","Literal","no-underscore-dangle","Unexpected dangling '_' in '_registerToPusherBeams'.","FunctionDeclaration","unexpectedUnderscore","spaced-comment","Expected exception block, space or tab after '//' in comment.","expectedExceptionAfter",{"range":"482","text":"483"},"prefer-const","'promise' is never reassigned. Use 'const' instead.","useConst",{"range":"484","text":"485"},"'navigator' is not defined.","prefer-arrow-callback","Unexpected function expression.","FunctionExpression","preferArrowCallback",{"range":"486","text":"487"},"func-names","Unexpected unnamed function.","unnamed","consistent-return","Expected to return a value at the end of arrow function.","ArrowFunctionExpression","missingReturn","Unexpected dangling '_' in '_deviceId'.","VariableDeclarator","'beamsClient' is already declared in the upper scope on line 13 column 17.",{"range":"488","text":"489"},{"range":"490","text":"491"},{"range":"492","text":"493"},"Unexpected dangling '_' in '_createWorkerForRegisterUserDevice'.",{"range":"494","text":"483"},"'workerBlob' is never reassigned. Use 'const' instead.",{"range":"495","text":"496"},"'Blob' is not defined.","'workerBlobUrl' is never reassigned. Use 'const' instead.",{"range":"497","text":"498"},"'worker' is never reassigned. Use 'const' instead.",{"range":"499","text":"500"},"'Worker' is not defined.","Unexpected dangling '_' in '_uuid'.","Unexpected dangling '_' in '_encryptedMnemonicPhrase'.","Unexpected dangling '_' in '_accountAddress'.","object-shorthand","Expected property shorthand.","Property","expectedPropertyShorthand",{"range":"501","text":"502"},"Unexpected dangling '_' in '_createWorkerAsValidator'.",{"range":"503","text":"483"},{"range":"504","text":"505"},{"range":"506","text":"498"},{"range":"507","text":"500"},{"range":"508","text":"509"},"prefer-destructuring","Use object destructuring.","AssignmentExpression","preferDestructuring","'BroadcastChannel' is not defined.",{"range":"510","text":"483"},"one-var","Split 'let' declarations into multiple statements.","VariableDeclaration","split",{"range":"511","text":"512"},"'queryUrl' is never reassigned. Use 'const' instead.",{"range":"513","text":"514"},"'generateSignatureUrl' is never reassigned. Use 'const' instead.",{"range":"515","text":"516"},"'submitValidatedTxnUrl' is never reassigned. Use 'const' instead.",{"range":"517","text":"518"},{"range":"519","text":"520"},"'userId' is never reassigned. Use 'const' instead.","'address' is never reassigned. Use 'const' instead.","'encryptedMnemonicPhrased' is never reassigned. Use 'const' instead.",{"range":"521","text":"522"},"eqeqeq","Expected '===' and instead saw '=='.","no-undefined","Unexpected use of undefined.","unexpectedUndefined",{"range":"523","text":"524"},"'txnId' is never reassigned. Use 'const' instead.",{"range":"525","text":"526"},{"range":"527","text":"483"},"'queryTxnIdResp' is never reassigned. Use 'const' instead.",{"range":"528","text":"529"},"no-unused-vars","'queryTxnIdResp' is assigned a value but never used.","unusedVar",{"range":"530","text":"531"},{"range":"532","text":"533"},"Expected '!==' and instead saw '!='.","'data' is already declared in the upper scope on line 52 column 16.",{"range":"534","text":"535"},{"range":"536","text":"483"},{"range":"537","text":"531"},"'data' is already declared in the upper scope on line 71 column 22.","'data' is defined but never used.",{"range":"538","text":"539"},"'e' is already declared in the upper scope on line 15 column 26.","'importScripts' is not defined.","'PusherPushNotifications' is not defined.","'pushEvent' is defined but never used.",{"range":"540","text":"479"},"import/no-extraneous-dependencies","'@jest/globals' should be listed in the project's dependencies. Run 'npm i -S @jest/globals' to add it","`@jest/globals` import should occur before import of `../src/modules/registrar-worker`",{"range":"541","text":"542"},"import/first","Absolute imports should come before relative imports.","'event' is defined but never used.","'handler' is defined but never used.","'options' is defined but never used.","arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","unexpectedSingleBlock",{"range":"543","text":"544"},{"range":"545","text":"479"},"'validatorWorker' is defined but never used.","`@jest/globals` import should occur before import of `../src/modules/validator-worker`",{"range":"546","text":"547"},[393,430],"`III-User pubkey:${  result.publicKey}`",[74,74],"\n",[7,1133],"{ Client, TokenProvider } from '@pusher/push-notifications-web';\r\nimport { registrarWorker } from './registrar-worker';\r\nimport { validatorWorker } from './validator-worker';\r\n\r\nasync function _registerToPusherBeams(conf, uuid) {\r\n  //Registering a service worker\r\n  let promise = new Promise((resolve, reject) => {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker\r\n        .register('service-worker.js')\r\n        .then(function () {\r\n          console.log('I-Service Worker Registered');\r\n          const beamsClient = new Client({\r\n            instanceId: conf.beams.instanceId,\r\n          });\r\n\r\n          beamsClient\r\n            .getUserId()\r\n            .then((userId) => {\r\n              // Check if the Beams user matches the user that is currently logged in\r\n              if (userId !== uuid) {\r\n                // Unregister for notifications\r\n                return beamsClient.stop();\r\n              }\r\n            }).catch((error) => {\r\n              throw error;\r\n            });\r\n\r\n          const beamsTokenProvider = new TokenProvider",[245,245]," ",[277,2107],"const promise = new Promise((resolve, reject) => {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker\r\n        .register('service-worker.js')\r\n        .then(function () {\r\n          console.log('I-Service Worker Registered');\r\n          const beamsClient = new PusherPushNotifications.Client({\r\n            instanceId: conf.beams.instanceId,\r\n          });\r\n\r\n          beamsClient\r\n            .getUserId()\r\n            .then((userId) => {\r\n              // Check if the Beams user matches the user that is currently logged in\r\n              if (userId !== uuid) {\r\n                // Unregister for notifications\r\n                return beamsClient.stop();\r\n              }\r\n            }).catch((error) => {\r\n              throw error;\r\n            });\r\n\r\n          const beamsTokenProvider = new PusherPushNotifications.TokenProvider({\r\n            url: conf.beams.authUrl,\r\n          });\r\n\r\n          let _deviceId;\r\n          beamsClient.start()\r\n            .then((beamsClient) => beamsClient.getDeviceId())\r\n            .then((deviceId) => {\r\n              _deviceId = deviceId;\r\n              console.log('II-Successfully registered with Beams. Device ID:' + deviceId);\r\n            })\r\n            .then(() => {\r\n              beamsClient.setUserId(uuid, beamsTokenProvider)\r\n                .then(() => {\r\n                  console.log('User ID has been set');\r\n                  resolve(_deviceId);\r\n                })\r\n                .catch((e) => {\r\n                  reject(new Error('Could not authenticate with Beams:' + e));\r\n                });\r\n            })\r\n            .catch((e) => {\r\n              reject(new Error('Could not get device id' + e));\r\n            });\r\n        });\r\n    } else {\r\n      reject(new Error('Service workers are not supported in this browser'));\r\n    }\r\n  });",[453,465],"() => ",[1410,1472],"`II-Successfully registered with Beams. Device ID:${  deviceId}`",[1796,1836],"`Could not authenticate with Beams:${  e}`",[1938,1967],"`Could not get device id${  e}`",[2215,2215],[2237,2373],"const workerBlob = new Blob(\r\n    [registrarWorker.toString().replace(/^function .+\\{?|\\}$/g, '')],\r\n    { type: 'text/javascript' }\r\n  );",[2377,2429],"const workerBlobUrl = URL.createObjectURL(workerBlob);",[2433,2472],"const worker = new Worker(workerBlobUrl);",[3296,3314],"deviceId",[3405,3405],[3426,3562],"const workerBlob = new Blob(\r\n    [validatorWorker.toString().replace(/^function .+\\{?|\\}$/g, '')],\r\n    { type: 'text/javascript' }\r\n  );",[3566,3618],[3622,3661],[3740,3764],"userAccount",[569,569],[646,725],";\r\n        let generateSignatureUrl = walletService.generateSignatureUrl;\r\n        let ",[657,714],"{generateSignatureUrl} = walletService",[725,790],"{submitValidatedTxnUrl} = txnGatewayEndpoints",[603,791],"const queryUrl = txnGatewayEndpoints.queryTxn,\r\n        generateSignatureUrl = walletService.generateSignatureUrl,\r\n        submitValidatedTxnUrl = txnGatewayEndpoints.submitValidatedTxnUrl;",[829,888],";\r\n        let address = userAccount._accountAddress;\r\n        let ",[799,952],"const userId = userAccount._uuid,\r\n        address = userAccount._accountAddress,\r\n        encryptedMnemonicPhrased = userAccount._encryptedMnemonicPhrase;",[1160,1188],"{txnId} = e.data.payload",[1156,1189],"const txnId = e.data.payload.txnId;",[1257,1257],[1314,3501],"const queryTxnIdResp = fetch(queryUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n          },\r\n          // body: JSON.stringify(user)\r\n          body: JSON.stringify({\r\n            id: Date.now()+ \"\",\r\n            jsonrpc: '2.0',\r\n            method: 'getunverifytx',\r\n            params: [txnId],\r\n          }),\r\n        })\r\n        .then(response=>response.json())\r\n        .then((data) =>\r\n        {\r\n          txnEncodeData = data.result.txnEncodeData;\r\n          console.log('Raw Txn Data :' + txnEncodeData);\r\n          if (txnEncodeData != undefined) {\r\n            fetch(generateSignatureUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n              },\r\n              // body: JSON.stringify(user)\r\n              body: JSON.stringify({\r\n                userUniqueId: userId,\r\n                encryptMnemonic: encryptedMnemonicPhrased,\r\n                accountAddress: address,\r\n                message: txnEncodeData,\r\n              }),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                signature = data.signature;\r\n                console.log('Signature :' + signature);\r\n                //4. Submit validated transaction\r\n                if (signature) {\r\n                  fetch(submitValidatedTxnUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json;charset=utf-8',\r\n                    },\r\n                    // body: JSON.stringify(user)\r\n                    body: JSON.stringify({\r\n                      id: Date.now()+ \"\",\r\n                      jsonrpc: '2.0',\r\n                      method: 'sendvalidatedrawtransaction',\r\n                      params: [txnId, signature],\r\n                    }),\r\n                  })\r\n                  .then(response=>response.json())\r\n                  .then((data) => {\r\n                    console.log('Txn submitted :' + JSON.stringify);\r\n                  });\r\n                }\r\n              });\r\n          }\r\n        });",[1571,1585],"`${Date.now() }`",[1866,1898],"`Raw Txn Data :${  txnEncodeData}`",[2590,2615],"`Signature :${  signature}`",[2637,2637],[3041,3055],[3378,3412],"`Txn submitted :${  JSON.stringify}`",[66,66],[0,104],"import {jest} from '@jest/globals'\r\nimport { registrarWorker } from \"../src/modules/registrar-worker\";\r\n",[345,392],"new Date(NOW).getTime()",[66,66],[0,104],"import {jest} from '@jest/globals'\r\nimport { validatorWorker } from \"../src/modules/validator-worker\";\r\n"]